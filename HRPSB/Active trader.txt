#include <iostream>
#include <map>
#include <vector>
#include <algorithm>
#include <string>

std::vector<std::string> active_customers(const std::vector<std::string>& trades) {
    // Create a map to store the trade count for each customer
    std::map<std::string, int> trade_count;
    for (const auto& trade : trades) {
        trade_count[trade]++;
    }
    
    // Calculate the total number of trades
    int total_trades = 0;
    for (const auto& [customer, count] : trade_count) {
        total_trades += count;
    }
    
    // Create a vector to store the active customers
    std::vector<std::string> active_customers;
    for (const auto& [customer, count] : trade_count) {
        if (count >= 0.05 * total_trades) {
            active_customers.push_back(customer);
        }
    }
    
    // Sort the vector of active customers alphabetically
    std::sort(active_customers.begin(), active_customers.end());
    
    return active_customers;
}

int main() {
    int n;
    //std::cout << "Enter the number of trades: ";
    std::cin >> n;
    
    std::vector<std::string> trades;
    std::string customer;
    for (int i = 0; i < n; i++) {
        //std::cout << "Enter customer name for trade " << i+1 << ": ";
        std::cin >> customer;
        trades.push_back(customer);
    }
    
    auto result = active_customers(trades);
    //std::cout << "Active customers: \n";
    for (const auto& customer : result) {
        std::cout << customer << '\n';
    }
    return 0;
}
