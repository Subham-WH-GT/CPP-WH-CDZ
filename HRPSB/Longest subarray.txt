#include <iostream>

#include <vector>

#include <algorithm>



using namespace std;



int longestSubarray(vector<int>& nums) {

    int n = nums.size();

    int left = 0, right = 0;

    int num1 = nums[0], num2 = nums[0];

    int count1 = 1, count2 = 0;

    int max_len = 1;



    for (right = 1; right < n; right++) {

        if (nums[right] == num1) {

            count1++;

        } else if (nums[right] == num2) {

            count2++;

        } else {

            if (abs(nums[right] - num1) <= 1 && abs(nums[right] - num2) <= 1) {

                num2 = nums[right];

                count1 = count2 + 1;

                count2 = 1;

            } else {

                while (abs(nums[right] - num1) > 1 || abs(nums[right] - num2) > 1) {

                    if (nums[left] == num1) {

                        count1--;

                    } else {

                        count2--;

                    }

                    if (count1 == 0) {

                        num1 = nums[right];

                        count1 = 1;

                    } else if (count2 == 0) {

                        num2 = nums[right];

                        count2 = 1;

                    }

                    left++;

                }

            }

        }

        max_len = max(max_len, count1 + count2);

    }



    return max_len;

}



int main() {

    int n, num;

    vector<int> nums;



    // read the elements of the vector from the user

    //cout << "Enter the number of elements: ";

    cin >> n;

    //cout << "Enter the elements: ";

    for (int i = 0; i < n; i++) {

        cin >> num;

        nums.push_back(num);

    }



    int max_len = longestSubarray(nums);

    cout << max_len << endl;



    return 0;

}

