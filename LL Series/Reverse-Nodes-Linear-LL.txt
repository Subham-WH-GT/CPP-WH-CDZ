Q.(Program to reverse k nodes in linked list)?

/* example-LL=1 2 3 4 5   for;k=2
              o/p= 2 1 4 3 5 */
#include<iostream>
using namespace std;
class node{
            public:
                        int data;
                        node* next;
                        node(int val){
                       data=val;
                       next=NULL;
                       }
                     };
void elements(node *&head,int k){
node * n=new node(k);
if(head==NULL){
head=n;
return;
}
node* temp=head;
while(temp->next != NULL){
temp=temp->next;
}
temp->next=n;
}                     
void display(node *head){
if(head==NULL){
cout<<"NO elements is present in the list.\n";
return;
}
node*temp=head;
while(temp !=NULL){
cout<<temp->data<<" ";
temp=temp->next;
}
cout<<endl;
}
void reverse(node *s,node*e){
node*prev=NULL;
node*curr=s;
node*nxt=s->next;
while(prev != e){
curr->next=prev;
prev=curr;
curr=nxt;
if(nxt != NULL){
nxt=nxt->next;
}
}
}
node* reversek(node *head, int k){
if(head==NULL || head->next==NULL || k==1){
return head;
}
node *dummy=new node(-23);
dummy->next=head;
node*beforestart=dummy;
node* end=head;
int i=0;
while(end != NULL){
i++;
if(i%k==0){
node* start=beforestart->next;
node* temp=end->next;
reverse(start,end);
beforestart->next=end;
start->next=temp;
beforestart=start;
end=temp;
}
else{
end=end->next;
}
}
return dummy->next;
}                       
int main(){
node *head=NULL;
elements(head,1);
elements(head,2);
elements(head,3);
elements(head,4);
elements(head,5);
cout<<"Elements of the list are:\n";
display(head);
int a;
cout<<"Enter the value of node:\n";
cin>>a;
node* newhead=reversek(head,a);
cout<<"Answer:\n";
display(newhead);
return 0;
}